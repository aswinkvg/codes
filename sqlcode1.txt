create database petpals;
use petpals;

CREATE TABLE Pets (
    PetID INT AUTO_INCREMENT PRIMARY KEY not null,
    Name VARCHAR(255) ,
    Age INT NOT NULL,
    Breed VARCHAR(255) ,
    Type VARCHAR(255) ,
    AvailableForAdoption BIT 
);

CREATE TABLE Shelters (
    ShelterID INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
    Name VARCHAR(255),
    Location VARCHAR(255)
);

CREATE TABLE Donations (
    DonationID INT AUTO_INCREMENT PRIMARY KEY,
    DonorName VARCHAR(255) NOT NULL,
    Amount DECIMAL(10, 2) NOT NULL,
    DonationDate DATE NOT NULL,
    DonationType VARCHAR(255) NOT NULL,
    DonationItem VARCHAR(255) NOT NULL,
    ShelterID INT,
    FOREIGN KEY (ShelterID) REFERENCES Shelters(ShelterID)
);


CREATE TABLE AdoptionEvents (
    EventID INT PRIMARY KEY,
    EventName VARCHAR(255),
    EventDate DATETIME,
    Location VARCHAR(255)
);


CREATE TABLE Participants (
    ParticipantID INT PRIMARY KEY,
    ParticipantName VARCHAR(255),
    ParticipantType VARCHAR(255),
    EventID INT,
    FOREIGN KEY (EventID) REFERENCES AdoptionEvents(EventID)
);

ALTER TABLE Pets
ADD COLUMN ShelterID INT,
ADD CONSTRAINT fk_ShelterID
    FOREIGN KEY (ShelterID)
    REFERENCES Shelters(ShelterID);
    
ALTER TABLE Shelters
ADD CONSTRAINT fk_ShelterID
    FOREIGN KEY (ShelterID)
    REFERENCES Participants(ShelterID);
    
    ALTER TABLE Shelters
ADD COLUMN ParticipantID INT,
ADD CONSTRAINT fk_ParticipantID
    FOREIGN KEY (ParticipantID)
    REFERENCES Participants(ParticipantID);


describe pets;
describe participants;
describe donations;
describe adoptionevents;
describe shelters;
ALTER TABLE Donations
ADD COLUMN ParticipantID INT,
ADD CONSTRAINT fk_ParticipantID
    FOREIGN KEY (ParticipantID)
    REFERENCES Participants(ParticipantID);
    
    
    INSERT INTO Shelters (Name, Location) VALUES ('Hope Animal Shelter', '123 ABC Street, Mumbai, Maharashtra, India');
INSERT INTO Shelters (Name, Location) VALUES ('Compassion for Critters', '456 XYZ Road, Delhi, Delhi, India');
INSERT INTO Shelters (Name, Location) VALUES ('Love and Care Pet Adoption Center', '789 LMN Avenue, Bangalore, Karnataka, India');
INSERT INTO Shelters (Name, Location) VALUES ('Paws and Purrs Sanctuary', '321 DEF Colony, Kolkata, West Bengal, India');
INSERT INTO Shelters (Name, Location) VALUES ('Safe Haven Animal Rescue', '567 GHI Lane, Chennai, Tamil Nadu, India');
 select * from shelters;


INSERT INTO Pets (Name, Age, Breed, Type, AvailableForAdoption, ShelterID) VALUES 
('Max', 3, 'Labrador Retriever', 'Dog', 1, 1),
('Bella', 2, 'Siamese', 'Cat', 1, 2),
('Rocky', 4, 'German Shepherd', 'Dog', 0, 3),
('Luna', 1, 'Persian', 'Cat', 1, 4),
('Simba', 2, 'Golden Retriever', 'Dog', 1, 5);
select * from pets;

INSERT INTO AdoptionEvents (EventID, EventName, EventDate, Location) VALUES 
(1, 'Pet Adoption Drive', '2024-04-15 10:00:00', 'Mumbai, Maharashtra, India'),
(2, 'Furry Friends Festival', '2024-05-01 14:00:00', 'Delhi, Delhi, India'),
(3, 'Paws and Play Day', '2024-05-10 11:30:00', 'Bangalore, Karnataka, India'),
(4, 'Whisker Wonderland', '2024-06-05 09:00:00', 'Kolkata, West Bengal, India'),
(5, 'Woofstock', '2024-06-20 12:00:00', 'Chennai, Tamil Nadu, India');
select * from adoptionevents;


INSERT INTO Participants (ParticipantID, ParticipantName, ParticipantType, EventID) 
VALUES 
(1, 'ABC Shelter', 'Shelter', 1),
(2, 'XYZ Adopter', 'Adopter', 1),
(3, 'PQR Shelter', 'Shelter', 2),
(4, 'LMN Shelter', 'Shelter', 3),
(5, 'DEF Adopter', 'Adopter', 4);
select * from participants;

INSERT INTO Donations (DonorName, Amount, DonationDate, DonationType, DonationItem, ShelterID, ParticipantID) 
VALUES 
('John Doe', 100.00, '2024-04-01', 'Cash', 'Pet Food', 1, 3),
('Jane Smith', 50.00, '2024-04-05', 'In-kind', 'Blankets', 4, 1),
('Alice Johnson', 75.00, '2024-04-10', 'Cash', 'Medical Supplies', 2, 4),
('Bob Williams', 200.00, '2024-04-15', 'Cash', 'Pet Toys', 1, 2),
('Emily Brown', 150.00, '2024-04-20', 'In-kind', 'Cat Litter', 3, 2);
select * from donations;

-- 5 Write an SQL query that retrieves a list of available pets (those marked as available for adoption) from the "Pets" table.
--  Include the pet's name, age, breed, and type in the result set. Ensure that the query filters out pets that are not available for adoption.

select * from pets 
where availableforadoption='1';
/*
1	Max	3	Labrador Retriever	Dog	1	1
2	Bella	2	Siamese	Cat	1	2
4	Luna	1	Persian	Cat	1	4
5	Simba	2	Golden Retriever	Dog	1	5
						
*/

-- 6 Write an SQL query that retrieves the names of participants (shelters and adopters) registered for a specific adoption event.
--  Use a parameter to specify the event ID. Ensure that the query joins the necessary tables to retrieve the participant names and types.
select P.participantName,p.participantType 
from participants p 
join adoptionevents ad on p.eventid=ad.eventid 
where ad.eventName='Pet Adoption Drive' ;

/*
ABC Shelter	Shelter
XYZ Adopter	Adopter
*/

-- 7 Create a stored procedure in SQL that allows a shelter to update its information (name and location) in the "Shelters" table. Use parameters to pass the shelter ID and the new information.
-- Ensure that the procedure performs the update and handles potential errors, such as an invalid shelter ID.

update shelters set Name='hospital with hospitality' ,
Location='697 New-market,bhopal,Madhya pradesh,India' 
where shelterID='3';

--  8. Write an SQL query that calculates and retrieves the total donation amount for each shelter (by shelter name) from the "Donations" table.
 -- The result should include the shelter name and the total donation amount. Ensure that the query handles cases where a shelter has received no donations.
 select * from donations;
 select s.name, sum(amount) as total_donation_amount 
 from shelters s 
 left join  donations d on s.shelterID=d.shelterID 
 group by s.Name;
 
 /*
 Compassion for Critters	75.00
Hope Animal Shelter	        300.00
hospital with hospitality	150.00
Paws and Purrs Sanctuary	50.00
Safe Haven Animal Rescue	null
 */
 
 -- 9  Write an SQL query that retrieves the names of pets from the "Pets" table that do not have an owner (i.e., where "OwnerID" is null).
--  Include the pet's name, age, breed, and type in the result set.
select * from pets where ownerid is null;

/*
2	Bella	2	Siamese	Cat	1	2	
4	Luna	1	Persian	Cat	1	4	
							
*/


-- 10 Write an SQL Query that retrieves the total donation amount for each month and year (e.g., January 2023)
-- from the "Donations" table. The result should include the month-year and the corresponding total donation amount.
-- Ensure that the query handles cases where no donations were made in a specific month-year.


-- 11 Retrieve a list of distinct breeds for all pets that are either aged between 1 and 3 years or older than 5 years.
select distinct(breed)
from pets 
where age in (1,2,3) or age >5 ;
/*Labrador Retriever
Siamese
Persian
Golden Retriever
*/
-- 12 Retrieve a list of pets and their respective shelters where the pets are currently available for adoption.
select p.*,s.name from pets p 
join shelters s on p.shelterID=s.shelterID 
group by p.petid,s.shelterID 
having p.AvailableForAdoption=1 ;
/*
1	Max	3	Labrador Retriever	Dog	1	1	3	Hope Animal Shelter
2	Bella	2	Siamese	Cat	1	2		Compassion for Critters
4	Luna	1	Persian	Cat	1	4		Paws and Purrs Sanctuary
5	Simba	2	Golden Retriever	Dog	1	5	1	Safe Haven Animal Rescue
*/

-- 13 Find the total number of participants in events organized by shelters located in specific city. Example: City=Chennai

select count(*) AS TotalParticipants
from Participants p
join AdoptionEvents ae ON p.EventID = ae.EventID
join donations d on d.participantID=p.participantID
join Shelters s ON s.shelterID=d.shelterID
WHERE s.Location = '697 New-market,bhopal,Madhya pradesh,India';
/* 1 */

--  14. Retrieve a list of unique breeds for pets with ages between 1 and 5 years.
select distinct(breed) from pets where age between 1 and 5;
/*
Labrador Retriever
Siamese
German Shepherd
Persian
Golden Retriever
*/

-- 15 Find the pets that have not been adopted by selecting their information from the 'Pet' table.
select * from pets 
where availableforadoption= '1';
/*
3	Rocky	4	German Shepherd	Dog	0	3	5
							
*/

-- 16 Retrieve the names of all adopted pets along with the adopter's name from the 'Adoption' ar 'User' tables.

select pets.Name,p.participantname
from Participants p
join donations d on d.participantID=p.participantID
join Shelters s ON s.shelterID=d.shelterID
join pets  on pets.shelterID=s.shelterID 
where participanttype='adopter';
/* 
Max	XYZ Adopter
Rocky	XYZ Adopter
*/

-- 17 Retrieve a list of all shelters along with the count of pets currently available for adoption in shelter.
select  s.shelterID,s.name,count(p.availableforadoption) as count_of_pets,p.AvailableForAdoption
from pets p join shelters s on p.shelterID=s.shelterID  
group by s.shelterID 
having p.AvailableForAdoption=1 ;
/*
1	Hope Animal Shelter	1	1
2	Compassion for Critters	1	1
4	Paws and Purrs Sanctuary	1	1
5	Safe Haven Animal Rescue	1	1
*/

--  18. Find pairs of pets from the same shelter that have the same breed.

SELECT DISTINCT p1.PetID AS Pet1ID, p1.Name AS Pet1Name, p2.PetID AS Pet2ID, p2.Name AS Pet2Name, p1.Breed
FROM Pets p1
JOIN Pets p2 ON p1.ShelterID = p2.ShelterID AND p1.Breed = p2.Breed AND p1.petid < p2.PetID;
/* NO OUTPUT */

--  19. List all possible combinations of shelters and adoption events. /* NOT SURE*/
select s.shelterID,s.name,a.eventID,a.Eventname from shelters s 
 cross join  donations d on s.shelterID=d.shelterID
 cross join participants p on p.participantID=d.participantID
 cross join adoptionevents a on a.eventID=p.eventID;


--  20. Determine the shelter that has the highest number of adopted pets.
